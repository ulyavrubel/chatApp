{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Messages","props","id","console","log","data","map","m","key","className","Online","Boolean","window","location","hostname","match","ReactDOM","render","useState","setId","nameInput","setNameInput","room","setRoom","input","setInput","useSocket","socket","connect","useImmer","messages","setMessages","online","setOnline","useEffect","on","nick","message","draft","push","people","newState","person","filter","animateScroll","scrollToBottom","containerId","onSubmit","e","preventDefault","emit","target","reset","handleSend","style","display","onChange","value","trim","type","event","alert","handleSubmit","required","placeholder","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.484d940f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport useSocket from \"use-socket.io-client\";\nimport { useImmer } from \"use-immer\";\nimport { animateScroll } from \"react-scroll\";\n\nconst Messages = props => {\n  let id = props.id;\n  console.log(id);\n\n  return props.data.map(m =>\n    m[0] !== \"\" ? (\n      <li key={m[0]}>\n        {id === m[0] ? (\n          <div className=\"rounded-full py-2 px-4 bg-blue-200 w-auto inline-block text-xs mt-1 \">\n            <strong>{m[0]}</strong> : {m[1]}\n          </div>\n        ) : (\n          <div className=\"rounded-full py-2 px-4 bg-gray-200 w-auto inline-block text-xs mt-1\">\n            <strong>{m[0]}</strong> : {m[1]}\n          </div>\n        )}\n      </li>\n    ) : (\n      <li key={m[1]} className=\"update py-4\">\n        {m[1]}\n      </li>\n    )\n  );\n};\n\nconst Online = props =>\n  props.data.map(m => (\n    <li className=\"text-sm\" id={m[0]}>\n      {m[1]}\n    </li>\n  ));\n\nexport default () => {\n  const [id, setId] = useState(\"\");\n  const [nameInput, setNameInput] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n\n  const [socket] = useSocket(\"https://open-chat-naostsaecf.now.sh\");\n  socket.connect();\n\n  const [messages, setMessages] = useImmer([]);\n  const [online, setOnline] = useImmer([]);\n\n  useEffect(() => {\n    socket.on(\"message queue\", (nick, message) => {\n      setMessages(draft => {\n        draft.push([nick, message]);\n      });\n    });\n\n    socket.on(\"update\", message =>\n      setMessages(draft => {\n        draft.push([\"\", message]);\n      })\n    );\n\n    socket.on(\"people-list\", people => {\n      let newState = [];\n      for (let person in people) {\n        newState.push([people[person].id, people[person].nick]);\n      }\n      setOnline(draft => {\n        draft.push(...newState);\n      });\n    });\n\n    socket.on(\"add-person\", (nick, id) => {\n      setOnline(draft => {\n        draft.push([id, nick]);\n      });\n    });\n\n    socket.on(\"remove-person\", id => {\n      setOnline(draft => draft.filter(m => m[0] !== id));\n    });\n\n    socket.on(\"chat message\", (nick, message) => {\n      setMessages(draft => {\n        draft.push([nick, message]);\n      });\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!nameInput) {\n      return alert(\"Name can't be empty\");\n    }\n    setId(nameInput);\n    socket.emit(\"join\", nameInput, room);\n  };\n\n  const handleSend = e => {\n    e.preventDefault();\n    if (input !== \"\") {\n      socket.emit(\"chat message\", input, room);\n      setInput(\"\");\n      e.target.reset();\n    }\n  };\n\n  const scrollToBottom = () => {\n    animateScroll.scrollToBottom({\n      containerId: \"messages\"\n    });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  return id ? (\n    <div>\n      <section className=\"flex-row p-2\">\n        <ul id=\"online\" className=\"overflow-y-auto p-2 bg-gray-300 rounded \">\n          {\" \"}\n          &#x1f310; : <Online data={online} />{\" \"}\n        </ul>\n        <ul id=\"messages\" className=\"overflow-y-auto px-2 \">\n          <Messages data={messages} id={id} />\n        </ul>\n\n        <div id=\"sendform\" className=\"px-2 py-2\">\n          <form onSubmit={e => handleSend(e)} style={{ display: \"flex\" }}>\n            <input\n              className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-blue-100\"\n              id=\"m\"\n              onChange={e => setInput(e.target.value.trim())}\n            ></input>\n            <button\n              className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full ml-2\"\n              type=\"submit\"\n            >\n              Send\n            </button>\n          </form>\n        </div>\n      </section>\n    </div>\n  ) : (\n    <div className=\"py-40 mx-auto w-4/5\">\n      <form\n        className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\"\n        onSubmit={event => handleSubmit(event)}\n      >\n        <input\n          className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline mb-4\"\n          id=\"name\"\n          onChange={event => setNameInput(event.target.value.trim())}\n          required\n          placeholder=\"What is your name ..\"\n        ></input>\n        <br />\n        <input\n          className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline mb-8\"\n          id=\"room\"\n          onChange={event => setRoom(event.target.value.trim())}\n          required\n          placeholder=\"What is your room ..\"\n        ></input>\n        <br />\n        <div className=\"flex justify-center \">\n          <button\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n            type=\"submit\"\n          >\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}